openapi: 3.0.0
info:
  title: Harness NextGen Software Delivery Platform API Reference
  description: This is the Open Api Spec 3 for the Templates Validations and Refresh.
    This is under active development. Beware of the breaking change with respect to
    the generated code stub.
  contact:
    email: contact@harness.io
  version: "1.0"
servers:
- url: http://app.harness.io
  description: Harness host url
security:
- x-api-key: []
tags:
- name: Account Template
  description: This contains APIs for performing CRUD operations on Templates at account
    scope.
- name: Org Template
  description: This contains APIs for performing CRUD operations on Templates at org
    scope.
- name: Project Template
  description: This contains APIs for performing CRUD operations on Templates at project
    scope.
paths:
  /v1/templates:
    get:
      tags:
      - Account Template
      summary: Get Templates List
      description: Retrieves list of Template with meta-data at Account scope.
      operationId: get-templates-list-acc
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Template List Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - STABLE_TEMPLATE
          - LAST_UPDATES_TEMPLATE
          - ALL
      - name: recursive
        in: query
        description: Specify true if all accessible Templates are to be included
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: names
        in: query
        description: Template names for filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: identifiers
        in: query
        description: Template Ids for Filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: description
        in: query
        description: Filter properties description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: entity_types
        in: query
        description: Type of Template
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - Step
            - Stage
            - Pipeline
            - CustomDeployment
            - MonitoredService
            - SecretManager
      - name: child_types
        in: query
        description: Child types describe the type of Step or stage
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: Template Lists Meta Data Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value:
                  - account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    version_label: example_version
                    entity_type: Step
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value: "- account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  version_label: example_version\n  entity_type: Step\n  child_type:\
                    \ example_child_type\n  scope: org\n  version: 1234567890\n  git_details:\n\
                    \    object_id: example_object\n    branch_name: branch\n    file_path:\
                    \ /folder/file.json\n    repo_name: example_repository\n    commit_id:\
                    \ abcd123\n    file_url: www.repo/folder/file.com\n    repo_url:\
                    \ www.repo.com\n  updated: 1234567890\n  store_type: INLINE\n\
                    \  connector_ref: example_connector_ref\n  stable_template: true\n"
    post:
      tags:
      - Account Template
      summary: Create Template
      description: Creates a Template in the Account scope.
      operationId: create-templates-acc
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateCreateBody'
      responses:
        "201":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
  /v1/templates/{template}:
    get:
      tags:
      - Account Template
      summary: Get Stable Template
      description: Retrieves stable version of Template at Account scope.
      operationId: get-template-stable-acc
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
  /v1/templates/{template}/versions/{version}:
    get:
      tags:
      - Account Template
      summary: Retrieve a Template
      description: Retrieves particular version of Template at Account scope.
      operationId: get-template-acc
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
    put:
      tags:
      - Account Template
      summary: Update Template
      description: Updates particular version of Template at Account scope.
      operationId: update-template-acc
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateUpdateBody'
      responses:
        "200":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
    delete:
      tags:
      - Account Template
      summary: Delete Template
      description: Deletes particular version of Template at Account scope.
      operationId: delete-template-acc
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: comments
        in: query
        description: 'Specify comment with respect to changes  '
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /v1/templates/{template}/versions/{version}/stable:
    put:
      tags:
      - Account Template
      summary: Update Stable Template
      description: Updates the stable version of Template at Account scope.
      operationId: update-template-stable-acc
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateFetchBody'
      responses:
        "200":
          description: Template stable version update Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value:
                    stable_version: example_version
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value: "stable_version: example_version\n"
  /v1/orgs/{org}/templates:
    get:
      tags:
      - Org Template
      summary: Get Templates List
      description: Retrieves list of Template with meta-data at Organization scope.
      operationId: get-templates-list-org
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Template List Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - STABLE_TEMPLATE
          - LAST_UPDATES_TEMPLATE
          - ALL
      - name: recursive
        in: query
        description: Specify true if all accessible Templates are to be included
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: names
        in: query
        description: Template names for filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: identifiers
        in: query
        description: Template Ids for Filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: description
        in: query
        description: Filter properties description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: entity_types
        in: query
        description: Type of Template
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - Step
            - Stage
            - Pipeline
            - CustomDeployment
            - MonitoredService
            - SecretManager
      - name: child_types
        in: query
        description: Child types describe the type of Step or stage
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: Template Lists Meta Data Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value:
                  - account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    version_label: example_version
                    entity_type: Step
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value: "- account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  version_label: example_version\n  entity_type: Step\n  child_type:\
                    \ example_child_type\n  scope: org\n  version: 1234567890\n  git_details:\n\
                    \    object_id: example_object\n    branch_name: branch\n    file_path:\
                    \ /folder/file.json\n    repo_name: example_repository\n    commit_id:\
                    \ abcd123\n    file_url: www.repo/folder/file.com\n    repo_url:\
                    \ www.repo.com\n  updated: 1234567890\n  store_type: INLINE\n\
                    \  connector_ref: example_connector_ref\n  stable_template: true\n"
    post:
      tags:
      - Org Template
      summary: Create Template
      description: Creates a Template in the Organization scope.
      operationId: create-templates-org
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateCreateBody'
      responses:
        "201":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
  /v1/orgs/{org}/templates/{template}:
    get:
      tags:
      - Org Template
      summary: Get Stable Template
      description: Retrieves stable version of Template at Organization scope.
      operationId: get-template-stable-org
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
  /v1/orgs/{org}/templates/{template}/versions/{version}:
    get:
      tags:
      - Org Template
      summary: Retrieve a Template
      description: Retrieves particular version of Template at Organization scope.
      operationId: get-template-org
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
    put:
      tags:
      - Org Template
      summary: Update Template
      description: Updates particular version of Template at Organization scope.
      operationId: update-template-org
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateUpdateBody'
      responses:
        "200":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
    delete:
      tags:
      - Org Template
      summary: Delete Template
      description: Deletes particular version of Template at Organization scope.
      operationId: delete-template-org
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: comments
        in: query
        description: 'Specify comment with respect to changes  '
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /v1/orgs/{org}/templates/{template}/versions/{version}/stable:
    put:
      tags:
      - Org Template
      summary: Update Stable Template
      description: Updates the stable version of Template at Organization scope.
      operationId: update-template-stable-org
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateFetchBody'
      responses:
        "200":
          description: Template stable version update Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value:
                    stable_version: example_version
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value: "stable_version: example_version\n"
  /v1/orgs/{org}/projects/{project}/templates:
    get:
      tags:
      - Project Template
      summary: Get Templates List
      description: Retrieves list of Template with meta-data at Project scope.
      operationId: get-templates-list-project
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Template List Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - STABLE_TEMPLATE
          - LAST_UPDATES_TEMPLATE
          - ALL
      - name: recursive
        in: query
        description: Specify true if all accessible Templates are to be included
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: names
        in: query
        description: Template names for filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: identifiers
        in: query
        description: Template Ids for Filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: description
        in: query
        description: Filter properties description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: entity_types
        in: query
        description: Type of Template
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - Step
            - Stage
            - Pipeline
            - CustomDeployment
            - MonitoredService
            - SecretManager
      - name: child_types
        in: query
        description: Child types describe the type of Step or stage
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: Template Lists Meta Data Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value:
                  - account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    version_label: example_version
                    entity_type: Step
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value: "- account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  version_label: example_version\n  entity_type: Step\n  child_type:\
                    \ example_child_type\n  scope: org\n  version: 1234567890\n  git_details:\n\
                    \    object_id: example_object\n    branch_name: branch\n    file_path:\
                    \ /folder/file.json\n    repo_name: example_repository\n    commit_id:\
                    \ abcd123\n    file_url: www.repo/folder/file.com\n    repo_url:\
                    \ www.repo.com\n  updated: 1234567890\n  store_type: INLINE\n\
                    \  connector_ref: example_connector_ref\n  stable_template: true\n"
    post:
      tags:
      - Project Template
      summary: Create Template
      description: Creates a Template in the Project scope.
      operationId: create-templates-project
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateCreateBody'
      responses:
        "201":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
  /v1/orgs/{org}/projects/{project}/templates/{template}:
    get:
      tags:
      - Project Template
      summary: Get Stable Template
      description: Retrieves stable version of Template at Project scope.
      operationId: get-template-stable-project
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
  /v1/orgs/{org}/projects/{project}/templates/{template}/versions/{version}:
    get:
      tags:
      - Project Template
      summary: Retrieve a Template
      description: Retrieves particular version of Template at Project scope.
      operationId: get-template-project
      parameters:
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
    put:
      tags:
      - Project Template
      summary: Update Template
      description: Updates particular version of Template at Project scope.
      operationId: update-template-project
      parameters:
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateUpdateBody'
      responses:
        "200":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
    delete:
      tags:
      - Project Template
      summary: Delete Template
      description: Deletes particular version of Template at Project scope.
      operationId: delete-template-project
      parameters:
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: comments
        in: query
        description: 'Specify comment with respect to changes  '
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /v1/orgs/{org}/projects/{project}/templates/{template}/versions/{version}/stable:
    put:
      tags:
      - Project Template
      summary: Update Stable Template
      description: Updates the stable version of Template at Project scope.
      operationId: update-template-stable-project
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateFetchBody'
      responses:
        "200":
          description: Template stable version update Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value:
                    stable_version: example_version
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value: "stable_version: example_version\n"
components:
  schemas:
    TemplateResponse:
      title: templateResponse
      required:
      - account
      - name
      - slug
      - yaml
      type: object
      properties:
        account:
          type: string
          description: Account identifier
        org:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Organization identifier
        project:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Project identifier
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Template identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Template Name
        description:
          maxLength: 1024
          type: string
          description: Template description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Template tags
        yaml:
          type: string
          description: Yaml related to template
        version_label:
          type: string
          description: Version label of template
        entity_type:
          type: string
          description: |
            Type of Template
          enum:
          - Step
          - Stage
          - Pipeline
          - CustomDeployment
          - MonitoredService
          - SecretManager
        child_type:
          type: string
          description: Defines child template type
        scope:
          type: string
          description: Scope of template
          enum:
          - org
          - project
          - account
          - unknown
        version:
          type: integer
          description: Version of template
          format: int64
        git_details:
          $ref: '#/components/schemas/EntityGitDetails'
        updated:
          type: integer
          description: |
            Last modification timestamp for Service.
          format: int64
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not
            (for Git Experience).
          enum:
          - INLINE
          - REMOTE
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity (for Git Experience).
        stable_template:
          type: boolean
          description: True if this version is stable version of Template
      description: Default response when a template is returned
      example:
        version_label: version_label
        org: org
        connector_ref: connector_ref
        project: project
        description: description
        store_type: INLINE
        version: 0
        tags:
          key: tags
        entity_type: Step
        stable_template: true
        scope: org
        name: name
        child_type: child_type
        git_details:
          file_path: file_path
          file_url: file_url
          repo_url: repo_url
          branch_name: branch_name
          repo_name: repo_name
          object_id: object_id
          commit_id: commit_id
        updated: 6
        account: account
        slug: slug
        yaml: yaml
      x-stoplight:
        id: kj7anewxbf9xe
      x-examples:
        example-1:
          account: example_account
          org: example_organization
          project: example_project
          slug: example_template
          name: Example_template
          description: string
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
            \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type: Custom\n\
            \    spec:\n      execution:\n        steps:\n          - step:\n    \
            \          type: ShellScript\n              name: ss1\n              identifier:\
            \ ss1\n              spec:\n                shell: Bash\n            \
            \    onDelegate: true\n                source:\n                  type:\
            \ Inline\n                  spec:\n                    script: exit 1\n\
            \                environmentVariables: []\n                outputVariables:\
            \ []\n              timeout: 10m\n"
          version_label: example_version
          entity_type: Stage
          child_type: example_child_type
          scope: org
          version: 1234567890
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
          updated: 1234567890
          store_type: INLINE
          connector_ref: example_connector_ref
          stable_template: true
    TemplateMetadataSummaryResponse:
      title: TemplateMetadataSummaryResponse
      type: object
      properties:
        account:
          type: string
          description: Account identifier
        org:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Organization identifier
        project:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Project identifier
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Template identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Template Name
        description:
          maxLength: 1024
          type: string
          description: Template description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Template tags
        version_label:
          type: string
          description: Version label of template
        entity_type:
          type: string
          description: |
            Type of Template
          enum:
          - Step
          - Stage
          - Pipeline
          - CustomDeployment
          - MonitoredService
          - SecretManager
        child_type:
          type: string
          description: Defines child template type
        scope:
          type: string
          description: Scope of template
          enum:
          - org
          - project
          - account
          - unknown
        version:
          type: integer
          description: Version of template
          format: int64
        git_details:
          $ref: '#/components/schemas/EntityGitDetails'
        updated:
          type: integer
          description: |
            Last modification timestamp for Service.
          format: int64
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not
            (for Git Experience).
          enum:
          - INLINE
          - REMOTE
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity (for Git Experience).
        stable_template:
          type: boolean
          description: True if this version is stable version of Template
      description: Single Template Metadata Model
      example:
        version_label: version_label
        org: org
        connector_ref: connector_ref
        project: project
        description: description
        store_type: INLINE
        version: 0
        tags:
          key: tags
        entity_type: Step
        stable_template: true
        scope: org
        name: name
        child_type: child_type
        git_details:
          file_path: file_path
          file_url: file_url
          repo_url: repo_url
          branch_name: branch_name
          repo_name: repo_name
          object_id: object_id
          commit_id: commit_id
        updated: 6
        account: account
        slug: slug
      x-stoplight:
        id: 92a2rxt8uqji1
      x-examples:
        example-1:
          account: example_account
          org: example_organization
          project: example_project
          slug: example_template
          name: Example_template
          description: string
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          version_label: example_version
          entity_type: Step
          child_type: example_child_type
          scope: org
          version: 1234567890
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
          updated: 1234567890
          store_type: INLINE
          connector_ref: example_connector_ref
          stable_template: true
    TemplateWithInputsResponse:
      title: templateWithInputsResponse
      type: object
      properties:
        template:
          $ref: '#/components/schemas/TemplateResponse'
        inputs:
          type: string
          description: Input Yaml for the Template
      description: Returns Template input YAML with template response
      example:
        template:
          version_label: version_label
          org: org
          connector_ref: connector_ref
          project: project
          description: description
          store_type: INLINE
          version: 0
          tags:
            key: tags
          entity_type: Step
          stable_template: true
          scope: org
          name: name
          child_type: child_type
          git_details:
            file_path: file_path
            file_url: file_url
            repo_url: repo_url
            branch_name: branch_name
            repo_name: repo_name
            object_id: object_id
            commit_id: commit_id
          updated: 6
          account: account
          slug: slug
          yaml: yaml
        inputs: inputs
      x-stoplight:
        id: 3fo3c6coeu472
      x-examples:
        example-1:
          template:
            account: example_account
            org: example_organization
            project: example_project
            slug: example_template
            name: Example_template
            description: string
            tags:
              example-tag-1: example-tag-1-value
              example-tag-2: example-tag-2-value
            yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
              \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type: Custom\n\
              \    spec:\n      execution:\n        steps:\n          - step:\n  \
              \            type: ShellScript\n              name: ss1\n          \
              \    identifier: ss1\n              spec:\n                shell: Bash\n\
              \                onDelegate: true\n                source:\n       \
              \           type: Inline\n                  spec:\n                \
              \    script: exit 1\n                environmentVariables: []\n    \
              \            outputVariables: []\n              timeout: 10m\n"
            version_label: example_version
            entity_type: Stage
            child_type: example_child_type
            scope: org
            version: 1234567890
            git_details:
              object_id: example_object
              branch_name: branch
              file_path: /folder/file.json
              repo_name: example_repository
              commit_id: abcd123
              file_url: www.repo/folder/file.com
              repo_url: www.repo.com
            updated: 1234567890
            store_type: INLINE
            connector_ref: example_connector_ref
            stable_template: true
          inputs: example
    TemplateMetaDataList:
      title: TemplateMetaDataList
      type: array
      description: Template Meta Data List Model
      items:
        $ref: '#/components/schemas/TemplateMetadataSummaryResponse'
      x-stoplight:
        id: ld1ggfzj0v0nv
      x-examples:
        example-1:
        - account: example_account
          org: example_organization
          project: example_project
          slug: example_template
          name: Example_template
          description: string
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          version_label: example_version
          entity_type: Step
          child_type: example_child_type
          scope: org
          version: 1234567890
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
          updated: 1234567890
          store_type: INLINE
          connector_ref: example_connector_ref
          stable_template: true
      x-schema-name: TemplateMetaDataList
    EntityGitDetails:
      title: entityGitDetails
      type: object
      properties:
        object_id:
          type: string
          description: Entity identifier
        branch_name:
          type: string
          description: Name of the branch.
        file_path:
          type: string
          description: File path of the Entity in the repository.
        repo_name:
          type: string
          description: Name of the repository.
        commit_id:
          type: string
          description: Latest commit identifier.
        file_url:
          type: string
          description: File URL of the Entity.
        repo_url:
          type: string
          description: Repository URL of the Entity.
      description: Git Experience related details of the Entity.
      example:
        file_path: file_path
        file_url: file_url
        repo_url: repo_url
        branch_name: branch_name
        repo_name: repo_name
        object_id: object_id
        commit_id: commit_id
      x-stoplight:
        id: bu0i4dwga5nkz
      x-examples:
        example-git:
          object_id: example_object
          branch_name: branch
          file_path: /folder/file.json
          repo_name: example_repository
          commit_id: abcd123
          file_url: www.repo/folder/file.com
          repo_url: www.repo.com
    GitFindDetails:
      title: GitFindDetails
      type: object
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        parent_entity_connector_ref:
          type: string
          description: Connector ref of parent template if its remote
        parent_entity_repo_name:
          type: string
          description: Repo name of parent template if its remote
        parent_entity_account_id:
          type: string
          description: Account name of parent template if its remote
        parent_entity_org_id:
          type: string
          description: Organization name of parent template if its remote
        parent_entity_project_id:
          type: string
          description: Project name of parent entity if its remote
        comments:
          type: string
          description: 'Specify comment with respect to changes  '
      description: Contains parameters related to Fetching an Entity for Git Experience.
      x-stoplight:
        id: 8b3cs1apis8zf
      x-examples:
        example-1:
          branch_name: branch
          parent_entity_connector_ref: example_connector_ref
          parent_entity_repo_name: example_repo_name
          parent_entity_account_id: example_account_id
          parent_entity_org_id: example_org_id
          parent_entity_project_id: example_project_id
          comments: sample_comments
    GitCreateDetails:
      title: Create Git Details
      type: object
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        file_path:
          type: string
          description: File path of the Entity in the repository.
        commit_message:
          type: string
          description: Commit message used for the merge commit.
        base_branch:
          type: string
          description: Name of the default branch (this checks out a new branch titled
            by branch_name).
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity.
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not.
          enum:
          - INLINE
          - REMOTE
        repo_name:
          type: string
          description: Name of the repository.
      description: Contains parameters related to creating an Entity for Git Experience.
      x-stoplight:
        id: 18xzr2klzl8kn
      x-examples:
        example-create-git:
          branch_name: branch
          file_path: /folder/file.json
          commit_message: Added Harness Git Experience
          base_branch: old_branch
          connector_ref: git_connector
          store_type: INLINE
          repo_name: example_repository
    GitUpdateDetails:
      title: GitUpdateDetails
      type: object
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        commit_message:
          type: string
          description: Commit message used for the merge commit.
        last_object_id:
          type: string
          description: Last object identifier (for Github).
        base_branch:
          type: string
          description: Name of the default branch (this checks out a new branch titled
            by branch_name).
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity.
        last_commit_id:
          type: string
          description: Last commit identifier (for Git Repositories other than Github).
        file_path:
          type: string
          description: File path of the Entity in the repository.
        repo_name:
          type: string
          description: Name of the repository.
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not.
          enum:
          - INLINE
          - REMOTE
      description: Contains parameters related to Updating an Entity for Git Experience.
      x-stoplight:
        id: jejwgam2kmatw
      x-examples:
        example-1:
          branch_name: branch
          commit_message: Added Harness Git Experience
          last_object_id: example_object_id
          base_branch: old_branch
          connector_ref: git_connector
          last_commit_id: example_commit_id
          file_path: /folder/file.json
          repo_name: example_repository
          store_type: INLINE
    TemplateUpdateRequestBody:
      title: TemplateUpdateRequestBody
      type: object
      properties:
        template_yaml:
          type: string
          description: Yaml for updating existing Template
        git_details:
          $ref: '#/components/schemas/GitUpdateDetails'
        comments:
          type: string
          description: 'Specify comment with respect to changes  '
      description: Templates Update Request Body
      x-stoplight:
        id: ok69fcmiqlm1c
      x-examples:
        example-2:
          template_yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
            \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type: Custom\n\
            \    spec:\n      execution:\n        steps:\n          - step:\n    \
            \          type: ShellScript\n              name: ss1\n              identifier:\
            \ ss1\n              spec:\n                shell: Bash\n            \
            \    onDelegate: true\n                source:\n                  type:\
            \ Inline\n                  spec:\n                    script: exit 1\n\
            \                environmentVariables: []\n                outputVariables:\
            \ []\n              timeout: 10m\n"
          git_details:
            branch_name: branch
            commit_message: Added Harness Git Experience
            last_object_id: example_object_id
            base_branch: old_branch
            connector_ref: git_connector
            last_commit_id: example_commit_id
            file_path: /folder/file.json
            repo_name: example_repository
            store_type: INLINE
          comments: sample_comment
    TemplateCreateRequestBody:
      title: TemplateCreateRequestBody
      type: object
      properties:
        template_yaml:
          type: string
          description: Yaml for creating new Template
        git_details:
          $ref: '#/components/schemas/GitCreateDetails'
        is_stable:
          type: boolean
          description: True if given version for template to be set as stable
        comments:
          type: string
          description: 'Specify comment with respect to changes  '
      description: Templates Create Request Body
      x-stoplight:
        id: mp9rm9sp09yru
      x-examples:
        example-2:
          template_yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
            \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type: Custom\n\
            \    spec:\n      execution:\n        steps:\n          - step:\n    \
            \          type: ShellScript\n              name: ss1\n              identifier:\
            \ ss1\n              spec:\n                shell: Bash\n            \
            \    onDelegate: true\n                source:\n                  type:\
            \ Inline\n                  spec:\n                    script: exit 1\n\
            \                environmentVariables: []\n                outputVariables:\
            \ []\n              timeout: 10m\n"
          git_details:
            branch_name: branch
            file_path: /folder/file.json
            commit_message: Added Harness Git Experience
            base_branch: old_branch
            connector_ref: git_connector
            store_type: INLINE
            repo_name: example_repository
          is_stable: true
          comments: sample_comment
    TemplateUpdateStableResponse:
      title: TemplateUpdateStableResponse
      type: object
      properties:
        stable_version:
          type: string
          description: |
            Version which is set as stable for the given Template
      description: Template stable version update Response
      example:
        stable_version: stable_version
      x-stoplight:
        id: 1h4plmwhpjnp4
  responses:
    TemplateResponse:
      description: Template Response Body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateResponse'
          examples:
            example-1:
              value:
                account: example_account
                org: example_organization
                project: example_project
                slug: example_template
                name: Example_template
                description: string
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                  \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type:\
                  \ Custom\n    spec:\n      execution:\n        steps:\n        \
                  \  - step:\n              type: ShellScript\n              name:\
                  \ ss1\n              identifier: ss1\n              spec:\n    \
                  \            shell: Bash\n                onDelegate: true\n   \
                  \             source:\n                  type: Inline\n        \
                  \          spec:\n                    script: exit 1\n         \
                  \       environmentVariables: []\n                outputVariables:\
                  \ []\n              timeout: 10m\n"
                version_label: example_version
                entity_type: Stage
                child_type: example_child_type
                scope: org
                version: 1234567890
                git_details:
                  object_id: example_object
                  branch_name: branch
                  file_path: /folder/file.json
                  repo_name: example_repository
                  commit_id: abcd123
                  file_url: www.repo/folder/file.com
                  repo_url: www.repo.com
                updated: 1234567890
                store_type: INLINE
                connector_ref: example_connector_ref
                stable_template: true
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateResponse'
          examples:
            example-1:
              value: "account: example_account\norg: example_organization\nproject:\
                \ example_project\nslug: example_template\nname: Example_template\n\
                description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n    name:\
                \ Example_template\n    identifier: example_template\n    versionLabel:\
                \ v1\n    type: Stage\n    tags: {}\n    spec:\n      type: Custom\n\
                \      spec:\n        execution:\n          steps:\n            -\
                \ step:\n                type: ShellScript\n                name:\
                \ ss1\n                identifier: ss1\n                spec:\n  \
                \                shell: Bash\n                  onDelegate: true\n\
                \                  source:\n                    type: Inline\n   \
                \                 spec:\n                      script: exit 1\n  \
                \                environmentVariables: []\n                  outputVariables:\
                \ []\n                timeout: 10m\nversion_label: example_version\n\
                entity_type: Stage\nchild_type: example_child_type\nscope: org\nversion:\
                \ 1234567890\ngit_details:\n  object_id: example_object\n  branch_name:\
                \ branch\n  file_path: /folder/file.json\n  repo_name: example_repository\n\
                \  commit_id: abcd123\n  file_url: www.repo/folder/file.com\n  repo_url:\
                \ www.repo.com\nupdated: 1234567890\nstore_type: INLINE\nconnector_ref:\
                \ example_connector_ref\nstable_template: true\n"
    TemplateWithInputsResponse:
      description: Template With Input reference
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateWithInputsResponse'
          examples:
            example-1:
              value:
                template:
                  account: example_account
                  org: example_organization
                  project: example_project
                  slug: example_template
                  name: Example_template
                  description: string
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                    \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type:\
                    \ Custom\n    spec:\n      execution:\n        steps:\n      \
                    \    - step:\n              type: ShellScript\n              name:\
                    \ ss1\n              identifier: ss1\n              spec:\n  \
                    \              shell: Bash\n                onDelegate: true\n\
                    \                source:\n                  type: Inline\n   \
                    \               spec:\n                    script: exit 1\n  \
                    \              environmentVariables: []\n                outputVariables:\
                    \ []\n              timeout: 10m\n"
                  version_label: example_version
                  entity_type: Stage
                  child_type: example_child_type
                  scope: org
                  version: 1234567890
                  git_details:
                    object_id: example_object
                    branch_name: branch
                    file_path: /folder/file.json
                    repo_name: example_repository
                    commit_id: abcd123
                    file_url: www.repo/folder/file.com
                    repo_url: www.repo.com
                  updated: 1234567890
                  store_type: INLINE
                  connector_ref: example_connector_ref
                  stable_template: true
                inputs: example
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateWithInputsResponse'
          examples:
            example-1:
              value: "template:\n  account: example_account\n  org: example_organization\n\
                \  project: example_project\n  slug: example_template\n  name: Example_template\n\
                \  description: string\n  tags:\n    example-tag-1: example-tag-1-value\n\
                \    example-tag-2: example-tag-2-value\n  yaml: |\n    template:\n\
                \      name: Example_template\n      identifier: example_template\n\
                \      versionLabel: v1\n      type: Stage\n      tags: {}\n     \
                \ spec:\n        type: Custom\n        spec:\n          execution:\n\
                \            steps:\n              - step:\n                  type:\
                \ ShellScript\n                  name: ss1\n                  identifier:\
                \ ss1\n                  spec:\n                    shell: Bash\n\
                \                    onDelegate: true\n                    source:\n\
                \                      type: Inline\n                      spec:\n\
                \                        script: exit 1\n                    environmentVariables:\
                \ []\n                    outputVariables: []\n                  timeout:\
                \ 10m\n  version_label: example_version\n  entity_type: Stage\n  child_type:\
                \ example_child_type\n  scope: org\n  version: 1234567890\n  git_details:\n\
                \    object_id: example_object\n    branch_name: branch\n    file_path:\
                \ /folder/file.json\n    repo_name: example_repository\n    commit_id:\
                \ abcd123\n    file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                \  updated: 1234567890\n  store_type: INLINE\n  connector_ref: example_connector_ref\n\
                \  stable_template: true\ninputs: example\n"
    TemplateMetaDataList:
      description: Template Lists Meta Data Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateMetaDataList'
          examples:
            example-1:
              value:
              - account: example_account
                org: example_organization
                project: example_project
                slug: example_template
                name: Example_template
                description: string
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                version_label: example_version
                entity_type: Step
                child_type: example_child_type
                scope: org
                version: 1234567890
                git_details:
                  object_id: example_object
                  branch_name: branch
                  file_path: /folder/file.json
                  repo_name: example_repository
                  commit_id: abcd123
                  file_url: www.repo/folder/file.com
                  repo_url: www.repo.com
                updated: 1234567890
                store_type: INLINE
                connector_ref: example_connector_ref
                stable_template: true
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateMetaDataList'
          examples:
            example-1:
              value: "- account: example_account\n  org: example_organization\n  project:\
                \ example_project\n  slug: example_template\n  name: Example_template\n\
                \  description: string\n  tags:\n    example-tag-1: example-tag-1-value\n\
                \    example-tag-2: example-tag-2-value\n  version_label: example_version\n\
                \  entity_type: Step\n  child_type: example_child_type\n  scope: org\n\
                \  version: 1234567890\n  git_details:\n    object_id: example_object\n\
                \    branch_name: branch\n    file_path: /folder/file.json\n    repo_name:\
                \ example_repository\n    commit_id: abcd123\n    file_url: www.repo/folder/file.com\n\
                \    repo_url: www.repo.com\n  updated: 1234567890\n  store_type:\
                \ INLINE\n  connector_ref: example_connector_ref\n  stable_template:\
                \ true\n"
    TemplateUpdateStableResponse:
      description: Template stable version update Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateUpdateStableResponse'
          examples:
            example-1:
              value:
                stable_version: example_version
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateUpdateStableResponse'
          examples:
            example-1:
              value: "stable_version: example_version\n"
  parameters:
    Org:
      name: org
      in: path
      description: Organization Identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Project:
      name: project
      in: path
      description: Project Identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Template:
      name: template
      in: path
      description: Template Identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Version:
      name: version
      in: path
      description: Version Label for Template
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AccountHeaderParam:
      name: Harness-Account
      in: header
      description: "Slug field of the account the resource is scoped to. This is required\
        \ for Authorization methods other than the x-api-key header. If you are using\
        \ the x-api-key header, this can be skipped."
      required: false
      style: simple
      explode: false
      schema:
        type: string
    Comments:
      name: comments
      in: query
      description: 'Specify comment with respect to changes  '
      required: false
      style: form
      explode: true
      schema:
        type: string
    Limit:
      name: limit
      in: query
      description: "Pagination: Number of items to return"
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 30
    Order:
      name: order
      in: query
      description: Order on the basis of which sorting is done.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - ASC
        - DESC
    Sort:
      name: sort
      in: query
      description: Parameter on the basis of which sorting is done.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - slug
        - name
        - updated
    SearchTerm:
      name: search_term
      in: query
      description: This would be used to filter resources having attributes matching
        with search term.
      required: false
      style: form
      explode: true
      schema:
        type: string
    Page:
      name: page
      in: query
      description: "Pagination page number strategy: Specify the page number within\
        \ the paginated collection related to the number of items in each page\t"
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 0
    TemplateListType:
      name: type
      in: query
      description: Template List Type
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - STABLE_TEMPLATE
        - LAST_UPDATES_TEMPLATE
        - ALL
    IncludeAllTemplatesAccessibleAtScope:
      name: recursive
      in: query
      description: Specify true if all accessible Templates are to be included
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false
    GetTemplateInputYaml:
      name: include_yaml
      in: query
      description: Use it to get Template along with Input Set YAML
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    Branch:
      name: branch_name
      in: query
      description: Name of the branch
      required: false
      style: form
      explode: true
      schema:
        type: string
    ParentConnectorRef:
      name: parent_entity_connector_ref
      in: query
      description: Connector ref of parent template if its remote
      required: false
      style: form
      explode: true
      schema:
        type: string
    ParentRepoName:
      name: parent_entity_repo_name
      in: query
      description: Repo name of parent template if its remote
      required: false
      style: form
      explode: true
      schema:
        type: string
    ParentAccountId:
      name: parent_entity_account_id
      in: query
      description: Account name of parent template if its remote
      required: false
      style: form
      explode: true
      schema:
        type: string
    ParentOrgId:
      name: parent_entity_org_id
      in: query
      description: Organization name of parent template if its remote
      required: false
      style: form
      explode: true
      schema:
        type: string
    ParentProjectId:
      name: parent_entity_project_id
      in: query
      description: Project name of parent entity if its remote
      required: false
      style: form
      explode: true
      schema:
        type: string
    TemplateNames:
      name: names
      in: query
      description: Template names for filtering
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
    TemplateIds:
      name: identifiers
      in: query
      description: Template Ids for Filtering
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
    Description:
      name: description
      in: query
      description: Filter properties description
      required: false
      style: form
      explode: true
      schema:
        type: string
    EntityType:
      name: entity_types
      in: query
      description: Type of Template
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
          enum:
          - Step
          - Stage
          - Pipeline
          - CustomDeployment
          - MonitoredService
          - SecretManager
    TemplateChildTypes:
      name: child_types
      in: query
      description: Child types describe the type of Step or stage
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
  requestBodies:
    TemplateUpdateBody:
      description: Templates Update Request Body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateUpdateRequestBody'
          examples:
            example-1:
              value:
                template_yaml: "template:\n  name: Example_template\n  identifier:\
                  \ example_template\n  versionLabel: v1\n  type: Stage\n  tags: {}\n\
                  \  spec:\n    type: Custom\n    spec:\n      execution:\n      \
                  \  steps:\n          - step:\n              type: ShellScript\n\
                  \              name: ss1\n              identifier: ss1\n      \
                  \        spec:\n                shell: Bash\n                onDelegate:\
                  \ true\n                source:\n                  type: Inline\n\
                  \                  spec:\n                    script: exit 1\n \
                  \               environmentVariables: []\n                outputVariables:\
                  \ []\n              timeout: 10m\n"
                git_details:
                  branch_name: branch
                  commit_message: Added Harness Git Experience
                  last_object_id: example_object_id
                  base_branch: old_branch
                  connector_ref: git_connector
                  last_commit_id: example_commit_id
                  file_path: /folder/file.json
                  repo_name: example_repository
                  store_type: INLINE
                comments: sample_comments
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateUpdateRequestBody'
          examples:
            example-1:
              value: "template_yaml: |\n  template:\n    name: Example_template\n\
                \    identifier: example_template\n    versionLabel: v1\n    type:\
                \ Stage\n    tags: {}\n    spec:\n      type: Custom\n      spec:\n\
                \        execution:\n          steps:\n            - step:\n     \
                \           type: ShellScript\n                name: ss1\n       \
                \         identifier: ss1\n                spec:\n               \
                \   shell: Bash\n                  onDelegate: true\n            \
                \      source:\n                    type: Inline\n               \
                \     spec:\n                      script: exit 1\n              \
                \    environmentVariables: []\n                  outputVariables:\
                \ []\n                timeout: 10m\ngit_details:\n  branch_name: branch\n\
                \  commit_message: Added Harness Git Experience\n  last_object_id:\
                \ example_object_id\n  base_branch: old_branch\n  connector_ref: git_connector\n\
                \  last_commit_id: example_commit_id\n  file_path: /folder/file.json\n\
                \  repo_name: example_repository\n  store_type: INLINE\ncomments:\
                \ sample_comments\n"
    TemplateFetchBody:
      description: Templates Fetch Request Body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitFindDetails'
          examples:
            example-1:
              value:
                branch_name: branch
                parent_entity_connector_ref: example_connector_ref
                parent_entity_repo_name: example_repo_name
                parent_entity_account_id: example_account_id
                parent_entity_org_id: example_org_id
                parent_entity_project_id: example_project_id
                comments: sample_comments
        application/yaml:
          schema:
            $ref: '#/components/schemas/GitFindDetails'
          examples:
            example-1:
              value: "branch_name: branch\nparent_entity_connector_ref: example_connector_ref\n\
                parent_entity_repo_name: example_repo_name\nparent_entity_account_id:\
                \ example_account_id\nparent_entity_org_id: example_org_id\nparent_entity_project_id:\
                \ example_project_id\ncomments: sample_comments\n"
    TemplateCreateBody:
      description: Templates Create Request Body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateCreateRequestBody'
          examples:
            example-1:
              value:
                template_yaml: "template:\n  name: Example_template\n  identifier:\
                  \ example_template\n  versionLabel: v1\n  type: Stage\n  tags: {}\n\
                  \  spec:\n    type: Custom\n    spec:\n      execution:\n      \
                  \  steps:\n          - step:\n              type: ShellScript\n\
                  \              name: ss1\n              identifier: ss1\n      \
                  \        spec:\n                shell: Bash\n                onDelegate:\
                  \ true\n                source:\n                  type: Inline\n\
                  \                  spec:\n                    script: exit 1\n \
                  \               environmentVariables: []\n                outputVariables:\
                  \ []\n              timeout: 10m\n"
                git_details:
                  branch_name: branch
                  file_path: /folder/file.json
                  commit_message: Added Harness Git Experience
                  base_branch: old_branch
                  connector_ref: git_connector
                  store_type: INLINE
                  repo_name: example_repository
                is_stable: true
                comments: sample_comment
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateCreateRequestBody'
          examples:
            example-1:
              value: "template_yaml: |\n  template:\n    name: Example_template\n\
                \    identifier: example_template\n    versionLabel: v1\n    type:\
                \ Stage\n    tags: {}\n    spec:\n      type: Custom\n      spec:\n\
                \        execution:\n          steps:\n            - step:\n     \
                \           type: ShellScript\n                name: ss1\n       \
                \         identifier: ss1\n                spec:\n               \
                \   shell: Bash\n                  onDelegate: true\n            \
                \      source:\n                    type: Inline\n               \
                \     spec:\n                      script: exit 1\n              \
                \    environmentVariables: []\n                  outputVariables:\
                \ []\n                timeout: 10m\ngit_details:\n  branch_name: branch\n\
                \  file_path: /folder/file.json\n  commit_message: Added Harness Git\
                \ Experience\n  base_branch: old_branch\n  connector_ref: git_connector\n\
                \  store_type: INLINE\n  repo_name: example_repository\nis_stable:\
                \ true\ncomments: sample_comment\n"
  securitySchemes:
    x-api-key:
      type: apiKey
      name: x-api-key
      in: header
x-stoplight:
  id: t4e4wu6mfxgxh
x-tagGroups:
- name: Templates
  tags:
  - Account Template
  - Org Template
  - Project Template
